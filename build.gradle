plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "8.1.0"
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def     allureVersion = "2.21.0",
        restAssuredVersion = "5.3.1"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:6.14.0',
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'org.slf4j:slf4j-simple:2.0.7',
            'com.github.javafaker:javafaker:1.0.2',
            "io.qameta.allure:allure-selenide:$allureVersion",
            'org.aeonbits.owner:owner:1.0.12',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

test {
    useJUnitPlatform()
}
task login_tests(type: Test) {
    useJUnitPlatform {
        includeTags("login_tests")
    }
}
task blogs_tests(type: Test) {
    useJUnitPlatform {
        includeTags("blogs_tests")
    }
}
task api_tests(type: Test) {
    useJUnitPlatform {
        includeTags("api_tests")
    }
}